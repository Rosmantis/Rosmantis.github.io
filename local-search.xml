<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>github_v2ray</title>
    <link href="/2021/12/29/github-v2ray/"/>
    <url>/2021/12/29/github-v2ray/</url>
    
    <content type="html"><![CDATA[<h3 id="github设置代理"><a href="#github设置代理" class="headerlink" title="github设置代理"></a>github设置代理</h3><p>由于git clone速度过慢，只有几十KiB，网上改host的教程也完全不管用。</p><p>查询之后发现git clone不走系统代理端口，即使本地科学上网也没有用。</p><p>所以需要对git进行全局配置</p><h3 id="v2Ray"><a href="#v2Ray" class="headerlink" title="v2Ray"></a>v2Ray</h3><p>v2Ray已经配置好，可以科学上网</p><h4 id="v2Ray侦听端口"><a href="#v2Ray侦听端口" class="headerlink" title="v2Ray侦听端口"></a>v2Ray侦听端口</h4><p>可以在v2Ray客户端下方看到</p><p>本地ip地址为<code>127.0.0.1</code>，此处socks侦听端口为10808，http侦听端口为10809</p><h3 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h3><ul><li><code>git config --global http.proxy http://127.0.0.1:10809</code></li><li><code>git config --global http.proxy socks5://127.0.0.1:10808</code></li></ul><h3 id="查看代理"><a href="#查看代理" class="headerlink" title="查看代理"></a>查看代理</h3><p>查看所有全局配置 <code>git config -l</code></p><p>查看全局http代理配置 <code>git config --global --get-regexp http.*</code></p><h3 id="取消代理"><a href="#取消代理" class="headerlink" title="取消代理"></a>取消代理</h3><p>取消全局代理 <code>git config --global --unset **http.proxy**</code></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>404 Not Found</title>
    <link href="/2021/12/29/404-Not-Found/"/>
    <url>/2021/12/29/404-Not-Found/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>subplot</title>
    <link href="/2021/12/29/subplot/"/>
    <url>/2021/12/29/subplot/</url>
    
    <content type="html"><![CDATA[<h3 id="pyplot-绘制多图方法"><a href="#pyplot-绘制多图方法" class="headerlink" title="pyplot 绘制多图方法"></a>pyplot 绘制多图方法</h3><hr><h4 id="subplot"><a href="#subplot" class="headerlink" title="subplot"></a>subplot</h4><h5 id="subplot-语法："><a href="#subplot-语法：" class="headerlink" title="subplot()语法："></a>subplot()语法：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subplot(nrows, ncols, index, **kwargs)</span><br></pre></td></tr></table></figure><ul><li>nrows：行数</li><li>ncols：列数</li><li>index：从左到右，从上到下，每个子区域的编号$1\cdots N$</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">row, col = <span class="number">3</span>, <span class="number">2</span></span><br><span class="line"></span><br><span class="line">img = img.reshape(features, samples)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, row * col+<span class="number">1</span>):</span><br><span class="line">    plt.subplot(row, col, i)</span><br><span class="line">    timg = img[:, i-<span class="number">1</span>]</span><br><span class="line">    timg = timg.reshape(width, height)</span><br><span class="line">    plt.imshow(timg)</span><br><span class="line">    plt.xticks([])</span><br><span class="line">    plt.yticks([])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h4 id="subplots"><a href="#subplots" class="headerlink" title="subplots"></a>subplots</h4><h5 id="subplots-语法："><a href="#subplots-语法：" class="headerlink" title="subplots()语法："></a>subplots()语法：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">matplotlib.pyplot.subplots(nrows=<span class="number">1</span>, ncols=<span class="number">1</span>, *, sharex=<span class="literal">False</span>, sharey=<span class="literal">False</span>, squeeze=<span class="literal">True</span>, subplot_kw=<span class="literal">None</span>, gridspec_kw=<span class="literal">None</span>, **fig_kw)</span><br></pre></td></tr></table></figure><ul><li><strong>nrows</strong>：默认为 1，设置图表的行数。</li><li><strong>ncols</strong>：默认为 1，设置图表的列数。</li><li><strong>sharex、sharey</strong>：设置 x、y 轴是否共享属性，默认为 false，可设置为 ‘none’、’all’、’row’ 或 ‘col’。 False 或 none 每个子图的 x 轴或 y 轴都是独立的，True 或 ‘all’：所有子图共享 x 轴或 y 轴，’row’ 设置每个子图行共享一个 x 轴或 y 轴，’col’：设置每个子图列共享一个 x 轴或 y 轴。</li><li><strong>squeeze</strong>：布尔值，默认为 True，表示额外的维度从返回的 Axes(轴)对象中挤出，对于 N<em>1 或 1</em>N 个子图，返回一个 1 维数组，对于 N*M，N&gt;1 和 M&gt;1 返回一个 2 维数组。如果设置为 False，则不进行挤压操作，返回一个元素为 Axes 实例的2维数组，即使它最终是1x1。</li><li><strong>subplot_kw</strong>：可选，字典类型。把字典的关键字传递给 add_subplot() 来创建每个子图。</li><li><strong>gridspec_kw</strong>：可选，字典类型。把字典的关键字传递给 GridSpec 构造函数创建子图放在网格里(grid)</li><li>*<strong>*fig_kw</strong>：把详细的关键字参数传给 figure() 函数。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建画像和子图</span></span><br><span class="line">fig, axs = plt.subplots(nrows, ncols)</span><br><span class="line"></span><br><span class="line"><span class="comment">###### 未对代码进行测试！</span></span><br><span class="line">axs[<span class="number">0</span>, <span class="number">0</span>].imshow(timg1)</span><br><span class="line">axs[<span class="number">0</span>, <span class="number">0</span>].axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">axs[<span class="number">1</span>, <span class="number">1</span>].imshow(timg2)</span><br><span class="line">axs[<span class="number">1</span>, <span class="number">1</span>].axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"><span class="comment">######</span></span><br><span class="line">fig.show()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/12/29/hello-world/"/>
    <url>/2021/12/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
